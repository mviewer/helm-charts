{{- $webapp := .Values.mviewerstudio -}}
{{- if $webapp.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mviewer.fullname" . }}-mviewerstudio
  labels:
    {{- include "mviewer.labels" . | nindent 4 }}
spec:
  replicas: {{ $webapp.replicaCount | default 2 }}
  selector:
    matchLabels:
      {{- include "mviewer.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ include "mviewer.fullname" . }}-mviewerstudio
  template:
    metadata:
      {{- with $webapp.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mviewer.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ include "mviewer.fullname" . }}-mviewerstudio
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml $webapp.podSecurityContext | nindent 8 }}
      {{- with $webapp.nodeSelector }}
      nodeSelector:
        {{- toYaml . |nindent 8 }}
      {{- end }}
      {{- with $webapp.affinity }}
      affinity:
        {{- toYaml . |nindent 8 }}
      {{- end }}
      {{- with $webapp.tolerations }}
      tolerations:
        {{- toYaml . |nindent 8 }}
      {{- end }}
      initContainers:
      - name: copy-starter-configmap
        image: busybox:latest
        {{- if $webapp.resetConfig }}
        command: ["sh", "-c", "cp /cm/config.json /mnt/mviewerstudio_conf/;"]
        {{- else }}
        command: ["sh", "-c", "if ! [ -f /mnt/mviewerstudio_conf/config.json ]; then cp /cm/config.json /mnt/mviewerstudio_conf/; fi ;"]
        {{- end }}
        volumeMounts:
        - name: mviewerstudio-conf
          mountPath: /mnt/mviewerstudio_conf
        - name: mviewerstudio-conf-json
          mountPath: /cm
      containers:
      - name: mviewerstudio
        image: "{{ $webapp.image.repository }}:{{ $webapp.image.tag }}"
        imagePullPolicy: {{ $webapp.image.imagePullPolicy }}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: MVIEWERSTUDIO_URL_PATH_PREFIX
          value: mviewerstudio
        - name: CONF_PATH_FROM_MVIEWER
          value: apps/drafts
        - name: CONF_PUBLISH_PATH_FROM_MVIEWER
          value: apps/published
        - name: EXPORT_CONF_FOLDER
          value: /home/apprunner/apps/drafts
        - name: MVIEWERSTUDIO_PUBLISH_PATH
          value: /home/apprunner/apps/published
        - name: DEFAULT_ORG
          value: no_org
        {{- with $webapp.extraEnv }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          {{- toYaml $webapp.resources | nindent 10 }}
        securityContext:
          {{- toYaml $webapp.securityContext | nindent 12 }}
        {{- with $webapp.lifecycle }}
        lifecycle:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: mviewer-conf
          mountPath: /home/apprunner/apps
        - name: mviewerstudio-static-apps
          mountPath: /home/apprunner/mviewerstudio_backend/static/apps
        {{- if $webapp.extraVolumeMounts }}
          {{- $webapp.extraVolumeMounts | toYaml | nindent 10 }}
        {{- end }}
      volumes:
      - name: mviewer-conf
        persistentVolumeClaim:
          claimName: {{ include "mviewer.fullname" . }}-mviewer-conf
      - name: mviewerstudio-static-apps
        # Persistent storage for static/apps folder
        persistentVolumeClaim:
          claimName: {{ include "mviewer.fullname" . }}-studio-static-apps
      - name: mviewerstudio-conf-json
        # initial config file
        configMap:
          name: {{ include "mviewer.fullname" . }}-mviewerstudio-conf-json
      {{- if $webapp.extraVolumes }}
        {{ $webapp.extraVolumes | toYaml | nindent 6 }}
      {{- end }}
{{- end }}
